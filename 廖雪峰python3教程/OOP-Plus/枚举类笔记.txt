>>> from enum import Enum
>>> Month = Enum('Month', ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'))
>>> for name,member in Month.__members__.items():
...     print(name,'=>',member,',',member.value)
...
Jan => Month.Jan , 1
Feb => Month.Feb , 2
Mar => Month.Mar , 3
Apr => Month.Apr , 4
May => Month.May , 5
Jun => Month.Jun , 6
Jul => Month.Jul , 7
Aug => Month.Aug , 8
Sep => Month.Sep , 9
Oct => Month.Oct , 10
Nov => Month.Nov , 11
Dec => Month.Dec , 12

Dec => Month.Dec , 12
>>> from enum import Enum,unique
>>> @unique
... class Weekday(Enum):
...     Sun = 7
...     Mon = 1
...     Tue = 2
...     Wed = 3
...     Thu = 4
...     Fri = 5
...     Sat = 6
...
>>> Weekday(0)      # 索引为member的value!
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Dell\Anaconda3\lib\enum.py", line 307, in __call__
    return cls.__new__(cls, value)
  File "C:\Users\Dell\Anaconda3\lib\enum.py", line 555, in __new__
    return cls._missing_(value)
  File "C:\Users\Dell\Anaconda3\lib\enum.py", line 568, in _missing_
    raise ValueError("%r is not a valid %s" % (value, cls.__name__))
ValueError: 0 is not a valid Weekday
>>> Weekday(7)   # 索引为member的value!
<Weekday.Sun: 7>
>>> print(Weekday(7))
Weekday.Sun
>>> Month(13)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Dell\Anaconda3\lib\enum.py", line 307, in __call__
    return cls.__new__(cls, value)
  File "C:\Users\Dell\Anaconda3\lib\enum.py", line 555, in __new__
    return cls._missing_(value)
  File "C:\Users\Dell\Anaconda3\lib\enum.py", line 568, in _missing_
    raise ValueError("%r is not a valid %s" % (value, cls.__name__))
ValueError: 13 is not a valid Month
>>> Month(12)
<Month.Dec: 12>
>>> day1
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'day1' is not defined
>>> day1 = Weekday.Mon
>>> day1
<Weekday.Mon: 1>
>>> prit(day1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'prit' is not defined
>>> print(day1)
Weekday.Mon
>>> day1==Weekday.Mon
True
>>> Weekday.Mon.value
1
>>> for name,member in Weekday.__members__.items():
...     print(name,'=>',member,':',member.value)
...
Sun => Weekday.Sun : 7
Mon => Weekday.Mon : 1
Tue => Weekday.Tue : 2
Wed => Weekday.Wed : 3
Thu => Weekday.Thu : 4
Fri => Weekday.Fri : 5
Sat => Weekday.Sat : 6

>>> for member in Weekday.__members__():
...     print(member,member.value)
...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'mappingproxy' object is not callable
>>> for member in Weekday.__members__.items():
...     print(member,member.value)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
AttributeError: 'tuple' object has no attribute 'value'
>>> for member in Weekday.__members__():
...     print(member,':',member.value)
...
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'mappingproxy' object is not callable
>>> for member in Weekday.__members__.items():
...     print(member,':',member.value)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
AttributeError: 'tuple' object has no attribute 'value'
>>> for name,member in Weekday.__members__.items():
...     print(member,':',member.value)
...
Weekday.Sun : 7
Weekday.Mon : 1
Weekday.Tue : 2
Weekday.Wed : 3
Weekday.Thu : 4
Weekday.Fri : 5
Weekday.Sat : 6

>>> for member in Weekday.__members__.items():
...      print(member)
...
('Sun', <Weekday.Sun: 7>)
('Mon', <Weekday.Mon: 1>)
('Tue', <Weekday.Tue: 2>)
('Wed', <Weekday.Wed: 3>)
('Thu', <Weekday.Thu: 4>)
('Fri', <Weekday.Fri: 5>)
('Sat', <Weekday.Sat: 6>)
>>> for name in Month:
...     print(name)
...
Month.Jan
Month.Feb
Month.Mar
Month.Apr
Month.May
Month.Jun
Month.Jul
Month.Aug
Month.Sep
Month.Oct
Month.Nov
Month.Dec

>>> for name in Month:
...     print(name,':',name.value)
...
Month.Jan : 1
Month.Feb : 2
Month.Mar : 3
Month.Apr : 4
Month.May : 5
Month.Jun : 6
Month.Jul : 7
Month.Aug : 8
Month.Sep : 9
Month.Oct : 10
Month.Nov : 11
Month.Dec : 12

关于类__dict__和mappingproxy:
参考 url1 = 'https://codeday.me/bug/20171112/95048.html'(来自Stackoverflow 'https://stackoverflow.com/questions/32720492/why-is-a-class-dict-a-mappingproxy')
     url2 = 'https://www.jianshu.com/p/fc8208ca59e4'

 关于dict的增删减操作技巧：
 url = 'http://developer.51cto.com/art/201003/186006.htm'
dict增:
 >>>d['a']=1
 >>>d.setdefault('b',2)
 dict减:
 >>>del d['a']
 >>>d.pop('b')
清空dict:
>>>d.clear()
{}
删除dict对象:
>>>del d
>>>d
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'd' is not defined
